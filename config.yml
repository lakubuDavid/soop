
crystal:
  command: "crystal init app {name}"
  description: "Simple hello world program in Crystal"
  check: "crystal -v"
  mkdir: false
  justfile_path: "templates/crystal.justfile"

java-console:
  command: >-
    mvn archetype:generate -DgroupId=com.{name}.app -DartifactId={name}
    -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.5
    -DinteractiveMode=false
  description: "Simple hello world console application in Java"
  check: "mvn -v"
  mkdir: false
  justfile_path: "templates/java.justfile"

python:
  source: "main.py"
  source_path: "templates/python/main.py"
  description: "Simple hello world program in Python"
  check: "python --version"
  mkdir: true
  justfile_path: "templates/python.justfile"

csharp-console:
  command: "dotnet new console -o {name} --use-program-main"
  description: "Simple hello world console application in C#"
  check: "dotnet --version"

echo:
  command: "echo {name}"
  description: "Just echoes back the name"
  mkdir: true
  
# my_template:
#   # Command to execute to generate a project which takes as parameter the name of the project as {name}
#   command: 
#   description:
#   # The name of source file
#   source: main.lang
#   # The path to the source file
#   source_path: templates/my_template/source.lang
#     # Wheter or not a new directory should be created
#   # The directory name will be the name of the project
#   mkdir: false # false by default
#   # A command to run to check if the necessary tools are available
#   check:  # e.g. A simple `--version` will d o the trick
#   # A template justfile
#   justfile_path: templates/my_template.justfile # 'templates/my_template/my_template.justfile'
#   # A template dockerfile
#   dockerfile_path: templates/my_template.dockerfile # 'templates/my_template/my_template.dockerfile'
